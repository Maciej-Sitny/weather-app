{"version":3,"file":"main.js","mappings":"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","sources":["webpack://weather_app/./src/info.js","webpack://weather_app/./src/remove.js","webpack://weather_app/./src/index.js","webpack://weather_app/./src/header.js","webpack://weather_app/./src/search.js","webpack://weather_app/./src/fetch.js","webpack://weather_app/./src/gif.js"],"sourcesContent":["//tutaj zrobie funkcje robiaca widok strony z danymi z search.js\nexport {displayData};\nimport { getGif } from \"./gif\";\n\n\n\nfunction displayData(data) {\n    let body = document.querySelector('body');\n    let dataDiv = document.createElement('div');\n    dataDiv.classList.add('dataDiv');\n\n    let cityName = document.createElement('h1');\n    cityName.classList.add('cityName');\n    cityName.innerText= data.name;\n\n    dataDiv.appendChild(cityName);\n\n    let currentWeather = document.createElement('h1')\n    currentWeather.classList.add('currentWeather');\n    currentWeather.innerText = data.weather[0].description;\n\n    let weatherForGIf = data.weather[0].main;\n    getGif(weatherForGIf);\n\n    dataDiv.appendChild(currentWeather);\n\n    let temperatureDiv = document.createElement('div');\n    let temperature = document.createElement('h2');\n    temperature.innerText = `Current temperature: ${(data.main.temp - 273).toFixed(1)}C` \n    let temperatureFeel = document.createElement('h2');\n    temperatureFeel.innerText= `Feels like: ${(data.main.feels_like -273).toFixed(1)}C`;  \n    temperatureFeel.classList.add('temperature');\n    temperature.classList.add('temperature');\n\n    temperatureDiv.appendChild(temperature);\n    temperatureDiv.appendChild(temperatureFeel);\n    dataDiv.appendChild(temperatureDiv);\n    let cloudiness = document.createElement('h2');\n    cloudiness.classList.add('cloudiness');\n    cloudiness.innerText = `Cloudiness: ${data.clouds.all}%`;\n\n    dataDiv.appendChild(cloudiness);\n\n    let wind = document.createElement('h2');\n    wind.classList.add('wind');\n    wind.innerText = `Current wind speed: ${data.wind.speed}m/s`;\n    \n    dataDiv.appendChild(wind);\n\n    let sunrise = document.createElement('h2');\n    sunrise.classList.add('sunrise');\n\n    sunrise.innerText = `Sunrise time: ${convertUnixToHours(data.sys.sunrise)}`;\n    \n    dataDiv.appendChild(sunrise);\n\n    let sunset = document.createElement('h2');\n    sunset.classList.add('sunset');\n\n    sunset.innerText = `Sunset time: ${convertUnixToHours(data.sys.sunset)}`;\n\n    dataDiv.appendChild(sunset)\n\n    body.appendChild(dataDiv);\n\n}\n\nfunction convertUnixToHours(timestamp) {\n    let date = new Date(timestamp * 1000);\n// Hours part from the timestamp\n    let hours = date.getHours();\n    // Minutes part from the timestamp\n    let minutes = \"0\" + date.getMinutes();\n    // Seconds part from the timestamp\n    let seconds = \"0\" + date.getSeconds();\n\n    // Will display time in 10:30:23 format\n    return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n}","export {removeSomething};\n\n//you need to input class or id\nconst removeSomething = (something) => {\n    if (something) {\n    let del = document.querySelectorAll(something);\n    del.forEach(d => d.remove());}\n    else console.log(\"Remove Something doesn't work\");\n}\n\n// const removeEverything = () => {\n//     let projectButton = document.querySelector('.projectButton')\n//     let projectText = document.querySelector('.projectText')\n//     let projects = document.querySelectorAll('.project')\n//     let todos = document.querySelectorAll('.todo');\n//     let projectsDiv = document.querySelector('.projectsDiv')\n//     let ptitle = document.querySelector('.ptitle')\n//     let addTodoButt = document.querySelector('.addTodoButt')\n//     let chooseDiv = document.querySelector('.chooseDiv')\n//     todos.forEach(todo => {\n//         todo.remove();\n//     });\n//     if (projectText !== null) projectText.remove();\n//     if (projectButton !== null) projectButton.remove();\n//     if (projects !== null) projects.forEach(p => p.remove())\n//     if (projectsDiv !== null) projectsDiv.remove();\n//     if (ptitle !== null) ptitle.remove();\n//     if (addTodoButt !== null) addTodoButt.remove();\n//     if (chooseDiv!==null) chooseDiv.remove();\n// }","import {createHeader} from './header'\nimport {createSearch} from './search'\n\nconsole.log(\"siema\");\ncreateHeader();\ncreateSearch();","export {createHeader}\n\nfunction createHeader() {\n    let body = document.querySelector('body');\n    let headerDiv = document.createElement('div');\n    headerDiv.classList.add('headerDiv')\n    let headerTitle = document.createElement('h1');\n    headerTitle.classList.add('headerTitle');\n    headerTitle.innerText = \"Check the weather\";\n    body.appendChild(headerDiv);\n    headerDiv.appendChild(headerTitle);\n}","import { getData } from \"./fetch\";\nimport { displayData } from \"./info\";\nimport { removeSomething } from \"./remove\";\nexport {createSearch}\n\n\nfunction createSearch() {\n    const body = document.querySelector('body');\n\n    let searchDiv = document.createElement('div');\n    searchDiv.classList.add('searchDiv');\n    // let searchForm = document.createElement('form');\n    // searchForm.classList.add('searchForm');\n    let cityInput = document.createElement('input');\n    cityInput.classList.add('cityInput');\n    cityInput.placeholder = \"City\";\n    let citySubmit = document.createElement('button');\n    citySubmit.classList.add('citySubmit');\n    citySubmit.innerText = 'Check';\n\n    // searchForm.appendChild(cityInput);\n    // searchForm.appendChild(citySubmit);\n    let currentCity;\n    citySubmit.addEventListener('click', async ()=>{\n        if (cityInput.value === '' || cityInput.value==\"Enter something!\") {\n            cityInput.value = 'Enter something!'\n        }\n        else {\n        currentCity = cityInput.value;\n        // cityInput.value='';\n        console.log(currentCity)\n        let data = await getData(currentCity);\n        console.log(data);\n        removeSomething('.dataDiv')\n        removeSomething('.gifImg')\n        displayData(data);\n        }\n    })\n\n    searchDiv.appendChild(cityInput);\n    searchDiv.appendChild(citySubmit);\n    // searchDiv.appendChild(searchForm);\n    body.appendChild(searchDiv);\n}","export {getData}\n\nasync function getData(city) {\n    try {\n    let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=dfe9b43a511d4c4c11ba9a79451454d2`)\n    let data = await response.json();\n    return data;}\n    catch {\n        error=>console.log(error)\n    };\n}\n\n","export {getGif};\n\nasync function getGif(tag) {\n    let response = await fetch(`https://api.giphy.com/v1/gifs/random?api_key=uiqjId3wpm5FTTcbmGAa9HLFW88YFEK4&tag=${tag}&rating=g`)\n    let data = await response.json();\n    console.log(data);\n\n    let gifImg = document.createElement('img');\n    gifImg.classList.add('gifImg');\n    gifImg.src = data.data.images.original.url;\n    document.querySelector('body').appendChild(gifImg);\n}"],"names":["convertUnixToHours","timestamp","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","removeSomething","something","document","querySelectorAll","forEach","d","remove","console","log","body","querySelector","headerDiv","createElement","classList","add","headerTitle","innerText","appendChild","createHeader","searchDiv","cityInput","placeholder","currentCity","citySubmit","addEventListener","async","value","data","city","response","fetch","json","getData","dataDiv","cityName","name","currentWeather","weather","description","tag","gifImg","src","images","original","url","getGif","main","temperatureDiv","temperature","temp","toFixed","temperatureFeel","feels_like","cloudiness","clouds","all","wind","speed","sunrise","sys","sunset","displayData","createSearch"],"sourceRoot":""}